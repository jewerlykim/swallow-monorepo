{
  "address": "0xE13b85B5a1cE1Ff084019520783f98254aefDc55",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "shortcutType",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "endpoint",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "contractAddr",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                }
              ],
              "internalType": "struct ShortcutsInterface.UserParams[]",
              "name": "userParams",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "isReady",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct ShortcutsInterface.Shortcut",
          "name": "newShortcut",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "blockNum",
          "type": "uint256"
        }
      ],
      "name": "AddShortcut",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "shortcutType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "endpoint",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "contractAddr",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "value",
              "type": "string"
            }
          ],
          "internalType": "struct ShortcutsInterface.UserParams[]",
          "name": "userParams",
          "type": "tuple[]"
        },
        {
          "internalType": "bool",
          "name": "isReady",
          "type": "bool"
        }
      ],
      "name": "addShortcut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllShortcuts",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "shortcutType",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "endpoint",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "contractAddr",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                }
              ],
              "internalType": "struct ShortcutsInterface.UserParams[]",
              "name": "userParams",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "isReady",
              "type": "bool"
            }
          ],
          "internalType": "struct ShortcutsInterface.Shortcut[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getShortcutByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "shortcutType",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "endpoint",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "contractAddr",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "value",
                  "type": "string"
                }
              ],
              "internalType": "struct ShortcutsInterface.UserParams[]",
              "name": "userParams",
              "type": "tuple[]"
            },
            {
              "internalType": "bool",
              "name": "isReady",
              "type": "bool"
            }
          ],
          "internalType": "struct ShortcutsInterface.Shortcut",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "newIsReady",
          "type": "bool"
        }
      ],
      "name": "setIsReady",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9f6e253a5ca3a86e7ab5cfdc4ed3e899e6d10eafe030cd2f5a8e5edd559a531b",
  "receipt": {
    "to": null,
    "from": "0x3338f7c7a0ABAC5C20e8d2ACa03E8C25fe31304F",
    "contractAddress": "0xE13b85B5a1cE1Ff084019520783f98254aefDc55",
    "transactionIndex": 10,
    "gasUsed": "1027827",
    "logsBloom": "0x
    "blockHash": "0x9398bfcb1f6c08a0c0b62f84d49009f155a9fddbda00c175c567a0d1d654a3c6",
    "transactionHash": "0x9f6e253a5ca3a86e7ab5cfdc4ed3e899e6d10eafe030cd2f5a8e5edd559a531b",
    "logs": [
      {
        "transactionIndex": 10,
        "blockNumber": 29005358,
        "transactionHash": "0x9f6e253a5ca3a86e7ab5cfdc4ed3e899e6d10eafe030cd2f5a8e5edd559a531b",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000003338f7c7a0abac5c20e8d2aca03e8c25fe31304f",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000921020e105b000000000000000000000000000000000000000000000000018f1083670d6350830000000000000000000000000000000000000000000000001ad9d2bf72d533e80000000000000000000000000000000000000000000000018f076264ff52f5830000000000000000000000000000000000000000000000001ae2f3c180e58ee8",
        "logIndex": 39,
        "blockHash": "0x9398bfcb1f6c08a0c0b62f84d49009f155a9fddbda00c175c567a0d1d654a3c6"
      }
    ],
    "blockNumber": 29005358,
    "cumulativeGasUsed": "2899195",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8949dd6a16b8a4072008a2461580bd69",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"shortcutType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"endpoint\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct ShortcutsInterface.UserParams[]\",\"name\":\"userParams\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"isReady\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct ShortcutsInterface.Shortcut\",\"name\":\"newShortcut\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNum\",\"type\":\"uint256\"}],\"name\":\"AddShortcut\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"shortcutType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"endpoint\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct ShortcutsInterface.UserParams[]\",\"name\":\"userParams\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"isReady\",\"type\":\"bool\"}],\"name\":\"addShortcut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllShortcuts\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"shortcutType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"endpoint\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct ShortcutsInterface.UserParams[]\",\"name\":\"userParams\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"isReady\",\"type\":\"bool\"}],\"internalType\":\"struct ShortcutsInterface.Shortcut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getShortcutByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"shortcutType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"endpoint\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"internalType\":\"struct ShortcutsInterface.UserParams[]\",\"name\":\"userParams\",\"type\":\"tuple[]\"},{\"internalType\":\"bool\",\"name\":\"isReady\",\"type\":\"bool\"}],\"internalType\":\"struct ShortcutsInterface.Shortcut\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"newIsReady\",\"type\":\"bool\"}],\"name\":\"setIsReady\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Shortcuts.sol\":\"Shortcuts\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/Shortcuts.sol\":{\"content\":\"pragma solidity 0.8.11;\\n\\nimport \\\"./interface/ShortcutsInterface.sol\\\";\\n\\ncontract Shortcuts is ShortcutsInterface {\\n    address public admin;\\n\\n    mapping(uint256 => Shortcut) internal _shortcuts;\\n    uint256 internal _index;\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"onlyAdmin\\\");\\n        _;\\n    }\\n\\n    constructor() {\\n        admin = msg.sender;\\n    }\\n\\n    /* external functions */\\n    function getAllShortcuts() external view returns (Shortcut[] memory) {\\n        uint256 len = _index;\\n        Shortcut[] memory allShortcuts = new Shortcut[](len);\\n\\n        for (uint256 i = 1; i <= len; i += 1) {\\n            allShortcuts[i] = _shortcuts[i];\\n        }\\n        return allShortcuts;\\n    }\\n\\n    function getShortcutByIndex(uint256 index) external view returns (Shortcut memory) {\\n        return _shortcuts[index];\\n    }\\n\\n    function addShortcut(\\n        string memory shortcutType,\\n        string memory endpoint,\\n        address contractAddr,\\n        UserParams[] memory userParams,\\n        bool isReady\\n    ) external onlyAdmin returns (uint256) {\\n        uint256 newIndex = _index + 1;\\n        Shortcut storage newShortcut = _shortcuts[newIndex];\\n\\n        newShortcut.shortcutType = shortcutType;\\n        newShortcut.endpoint = endpoint;\\n        newShortcut.contractAddr = contractAddr;\\n        newShortcut.isReady = isReady;\\n\\n        uint256 len = userParams.length;\\n        for (uint256 i = 0; i < len; i += 1) {\\n            newShortcut.userParams.push(userParams[i]);\\n        }\\n        _index = newIndex;\\n\\n        emit AddShortcut(newIndex, newShortcut, block.number);\\n        return newIndex;\\n    }\\n\\n    function setIsReady(uint256 index, bool newIsReady) external onlyAdmin {\\n        _shortcuts[index].isReady = newIsReady;\\n    }\\n}\\n\",\"keccak256\":\"0xa22bcd607627663ae28e78288f188faa741966908223204f0c64570d1f6e0a05\"},\"src/interface/ShortcutsInterface.sol\":{\"content\":\"pragma solidity 0.8.11;\\n\\ninterface ShortcutsInterface {\\n    struct UserParams {\\n        string name;\\n        string value;\\n    }\\n\\n    /// @dev selector and contractAddr is only for ShortCutType.Transaction\\n    struct Shortcut {\\n        uint256 index;\\n        string shortcutType;\\n        string endpoint;\\n        address contractAddr;\\n        UserParams[] userParams;\\n        bool isReady;\\n    }\\n\\n    event AddShortcut(uint256 indexed index, Shortcut newShortcut, uint256 blockNum);\\n\\n    function getAllShortcuts() external view returns (Shortcut[] memory);\\n\\n    function getShortcutByIndex(uint256 index) external view returns (Shortcut memory);\\n\\n    function addShortcut(\\n        string memory shortcutType,\\n        string memory endpoint,\\n        address contractAddr,\\n        UserParams[] memory userParams,\\n        bool isReady\\n    ) external returns (uint256);\\n\\n    function setIsReady(uint256 index, bool newIsReady) external;\\n}\\n\",\"keccak256\":\"0x46d4eede8e965afb27c5bf32a2b7c6bc8e132acc235bf4883ae24d271dd2ee3b\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163317905561113a806100326000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806362515b751461005c5780637ed81b211461008557806392a5890c146100a6578063b76ed2b4146100bb578063f851a440146100d0575b600080fd5b61006f61006a366004610a62565b6100fb565b60405161007c9190610bb2565b60405180910390f35b610098610093366004610cc1565b6103f3565b60405190815260200161007c565b6100b96100b4366004610e6f565b610596565b005b6100c36105ff565b60405161007c9190610e9b565b6000546100e3906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b610103610988565b600082815260016020818152604092839020835160c081019094528054845291820180549184019161013490610efd565b80601f016020809104026020016040519081016040528092919081815260200182805461016090610efd565b80156101ad5780601f10610182576101008083540402835291602001916101ad565b820191906000526020600020905b81548152906001019060200180831161019057829003601f168201915b505050505081526020016002820180546101c690610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546101f290610efd565b801561023f5780601f106102145761010080835404028352916020019161023f565b820191906000526020600020905b81548152906001019060200180831161022257829003601f168201915b505050918352505060038201546001600160a01b0316602080830191909152600483018054604080518285028101850182528281529401939260009084015b828210156103d457838290600052602060002090600202016040518060400160405290816000820180546102b190610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546102dd90610efd565b801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b5050505050815260200160018201805461034390610efd565b80601f016020809104026020016040519081016040528092919081815260200182805461036f90610efd565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050815250508152602001906001019061027e565b505050908252506005919091015460ff16151560209091015292915050565b600080546001600160a01b0316331461043f5760405162461bcd60e51b815260206004820152600960248201526837b7363ca0b236b4b760b91b60448201526064015b60405180910390fd5b600060025460016104509190610f38565b60008181526001602081815260409092208a519394509261047792918401918b01906109c9565b50865161048d90600283019060208a01906109c9565b506003810180546001600160a01b0319166001600160a01b03881617905560058101805460ff1916851515179055845160005b8181101561054757826004018782815181106104de576104de610f5e565b602090810291909101810151825460018101845560009384529282902081518051929460020290910192610517928492909101906109c9565b50602082810151805161053092600185019201906109c9565b5050506001816105409190610f38565b90506104c0565b5082600281905550827f94dc9ecd2303581f50382e72b763db27b4e24d19d4f0d8dce47f840cfbd790898343604051610581929190611014565b60405180910390a25090979650505050505050565b6000546001600160a01b031633146105dc5760405162461bcd60e51b815260206004820152600960248201526837b7363ca0b236b4b760b91b6044820152606401610436565b600091825260016020526040909120600501805460ff1916911515919091179055565b60025460609060008167ffffffffffffffff81111561062057610620610bcc565b60405190808252806020026020018201604052801561065957816020015b610646610988565b81526020019060019003908161063e5790505b50905060015b82811161098157600081815260016020818152604092839020835160c081019094528054845291820180549184019161069790610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546106c390610efd565b80156107105780601f106106e557610100808354040283529160200191610710565b820191906000526020600020905b8154815290600101906020018083116106f357829003601f168201915b5050505050815260200160028201805461072990610efd565b80601f016020809104026020016040519081016040528092919081815260200182805461075590610efd565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b505050918352505060038201546001600160a01b0316602080830191909152600483018054604080518285028101850182528281529401939260009084015b82821015610937578382906000526020600020906002020160405180604001604052908160008201805461081490610efd565b80601f016020809104026020016040519081016040528092919081815260200182805461084090610efd565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b505050505081526020016001820180546108a690610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546108d290610efd565b801561091f5780601f106108f45761010080835404028352916020019161091f565b820191906000526020600020905b81548152906001019060200180831161090257829003601f168201915b505050505081525050815260200190600101906107e1565b505050908252506005919091015460ff161515602090910152825183908390811061096457610964610f5e565b602090810291909101015261097a600182610f38565b905061065f565b5092915050565b6040518060c0016040528060008152602001606081526020016060815260200160006001600160a01b03168152602001606081526020016000151581525090565b8280546109d590610efd565b90600052602060002090601f0160209004810192826109f75760008555610a3d565b82601f10610a1057805160ff1916838001178555610a3d565b82800160010185558215610a3d579182015b82811115610a3d578251825591602001919060010190610a22565b50610a49929150610a4d565b5090565b5b80821115610a495760008155600101610a4e565b600060208284031215610a7457600080fd5b5035919050565b6000815180845260005b81811015610aa157602081850181015186830182015201610a85565b81811115610ab3576000602083870101525b50601f01601f19169290920160200192915050565b80518252600060208083015160c082860152610ae760c0860182610a7b565b905060408085015186830382880152610b008382610a7b565b6060878101516001600160a01b031690890152608080880151898303918a019190915280518083529194508501915084840190600581901b8501860160005b82811015610b8f57868203601f1901845284518051878452610b6388850182610a7b565b918a0151848303858c0152919050610b7b8183610a7b565b968a0196958a019593505050600101610b3f565b5060a08901519650610ba560a08b018815159052565b9998505050505050505050565b602081526000610bc56020830184610ac8565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610c0557610c05610bcc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c3457610c34610bcc565b604052919050565b600082601f830112610c4d57600080fd5b813567ffffffffffffffff811115610c6757610c67610bcc565b610c7a601f8201601f1916602001610c0b565b818152846020838601011115610c8f57600080fd5b816020850160208301376000918101602001919091529392505050565b80358015158114610cbc57600080fd5b919050565b600080600080600060a08688031215610cd957600080fd5b67ffffffffffffffff8087351115610cf057600080fd5b610cfd8888358901610c3c565b95508060208801351115610d1057600080fd5b610d208860208901358901610c3c565b945060408701356001600160a01b03811614610d3b57600080fd5b604087013593508060608801351115610d5357600080fd5b6060870135870188601f820112610d6957600080fd5b8181351115610d7a57610d7a610bcc565b610d8a6020823560051b01610c0b565b81358082526020808301929160051b8401018b1015610da857600080fd5b602083015b6020843560051b850101811015610e50578481351115610dcc57600080fd5b803584016040818e03601f19011215610de457600080fd5b610dec610be2565b8660208301351115610dfd57600080fd5b610e0f8e602080850135850101610c3c565b81528660408301351115610e2257600080fd5b610e358e60206040850135850101610c3c565b60208201528085525050602083019250602081019050610dad565b509450610e639250505060808701610cac565b90509295509295909350565b60008060408385031215610e8257600080fd5b82359150610e9260208401610cac565b90509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ef057603f19888603018452610ede858351610ac8565b94509285019290850190600101610ec2565b5092979650505050505050565b600181811c90821680610f1157607f821691505b60208210811415610f3257634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610f5957634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680610f8e57607f831692505b6020808410821415610fb057634e487b7160e01b600052602260045260246000fd5b83885260208801828015610fcb5760018114610fdc57611007565b60ff19871682528282019750611007565b60008981526020902060005b8781101561100157815484820152908601908401610fe8565b83019850505b5050505050505092915050565b60006040808352845481840152600160c0606085015261103a6101008501828801610f74565b6002603f198087840301608088015261105583838b01610f74565b60038a01546001600160a01b031660a089015287810390910160c0880152600489018054808352600091825260208083209395508086019392600583901b87018201905b838110156110de57878203601f190186528982526110b98a830186610f74565b828103848401526110cc818b8801610f74565b96840196958801959250508801611099565b5060059c909c015460ff16151560e08b015290980198909852509697965050505050505056fea26469706673582212209200342b94ea3454966c543d849863cb6b594d5693dcd31e96e64e30d62d54ad64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c806362515b751461005c5780637ed81b211461008557806392a5890c146100a6578063b76ed2b4146100bb578063f851a440146100d0575b600080fd5b61006f61006a366004610a62565b6100fb565b60405161007c9190610bb2565b60405180910390f35b610098610093366004610cc1565b6103f3565b60405190815260200161007c565b6100b96100b4366004610e6f565b610596565b005b6100c36105ff565b60405161007c9190610e9b565b6000546100e3906001600160a01b031681565b6040516001600160a01b03909116815260200161007c565b610103610988565b600082815260016020818152604092839020835160c081019094528054845291820180549184019161013490610efd565b80601f016020809104026020016040519081016040528092919081815260200182805461016090610efd565b80156101ad5780601f10610182576101008083540402835291602001916101ad565b820191906000526020600020905b81548152906001019060200180831161019057829003601f168201915b505050505081526020016002820180546101c690610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546101f290610efd565b801561023f5780601f106102145761010080835404028352916020019161023f565b820191906000526020600020905b81548152906001019060200180831161022257829003601f168201915b505050918352505060038201546001600160a01b0316602080830191909152600483018054604080518285028101850182528281529401939260009084015b828210156103d457838290600052602060002090600202016040518060400160405290816000820180546102b190610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546102dd90610efd565b801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b5050505050815260200160018201805461034390610efd565b80601f016020809104026020016040519081016040528092919081815260200182805461036f90610efd565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050815250508152602001906001019061027e565b505050908252506005919091015460ff16151560209091015292915050565b600080546001600160a01b0316331461043f5760405162461bcd60e51b815260206004820152600960248201526837b7363ca0b236b4b760b91b60448201526064015b60405180910390fd5b600060025460016104509190610f38565b60008181526001602081815260409092208a519394509261047792918401918b01906109c9565b50865161048d90600283019060208a01906109c9565b506003810180546001600160a01b0319166001600160a01b03881617905560058101805460ff1916851515179055845160005b8181101561054757826004018782815181106104de576104de610f5e565b602090810291909101810151825460018101845560009384529282902081518051929460020290910192610517928492909101906109c9565b50602082810151805161053092600185019201906109c9565b5050506001816105409190610f38565b90506104c0565b5082600281905550827f94dc9ecd2303581f50382e72b763db27b4e24d19d4f0d8dce47f840cfbd790898343604051610581929190611014565b60405180910390a25090979650505050505050565b6000546001600160a01b031633146105dc5760405162461bcd60e51b815260206004820152600960248201526837b7363ca0b236b4b760b91b6044820152606401610436565b600091825260016020526040909120600501805460ff1916911515919091179055565b60025460609060008167ffffffffffffffff81111561062057610620610bcc565b60405190808252806020026020018201604052801561065957816020015b610646610988565b81526020019060019003908161063e5790505b50905060015b82811161098157600081815260016020818152604092839020835160c081019094528054845291820180549184019161069790610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546106c390610efd565b80156107105780601f106106e557610100808354040283529160200191610710565b820191906000526020600020905b8154815290600101906020018083116106f357829003601f168201915b5050505050815260200160028201805461072990610efd565b80601f016020809104026020016040519081016040528092919081815260200182805461075590610efd565b80156107a25780601f10610777576101008083540402835291602001916107a2565b820191906000526020600020905b81548152906001019060200180831161078557829003601f168201915b505050918352505060038201546001600160a01b0316602080830191909152600483018054604080518285028101850182528281529401939260009084015b82821015610937578382906000526020600020906002020160405180604001604052908160008201805461081490610efd565b80601f016020809104026020016040519081016040528092919081815260200182805461084090610efd565b801561088d5780601f106108625761010080835404028352916020019161088d565b820191906000526020600020905b81548152906001019060200180831161087057829003601f168201915b505050505081526020016001820180546108a690610efd565b80601f01602080910402602001604051908101604052809291908181526020018280546108d290610efd565b801561091f5780601f106108f45761010080835404028352916020019161091f565b820191906000526020600020905b81548152906001019060200180831161090257829003601f168201915b505050505081525050815260200190600101906107e1565b505050908252506005919091015460ff161515602090910152825183908390811061096457610964610f5e565b602090810291909101015261097a600182610f38565b905061065f565b5092915050565b6040518060c0016040528060008152602001606081526020016060815260200160006001600160a01b03168152602001606081526020016000151581525090565b8280546109d590610efd565b90600052602060002090601f0160209004810192826109f75760008555610a3d565b82601f10610a1057805160ff1916838001178555610a3d565b82800160010185558215610a3d579182015b82811115610a3d578251825591602001919060010190610a22565b50610a49929150610a4d565b5090565b5b80821115610a495760008155600101610a4e565b600060208284031215610a7457600080fd5b5035919050565b6000815180845260005b81811015610aa157602081850181015186830182015201610a85565b81811115610ab3576000602083870101525b50601f01601f19169290920160200192915050565b80518252600060208083015160c082860152610ae760c0860182610a7b565b905060408085015186830382880152610b008382610a7b565b6060878101516001600160a01b031690890152608080880151898303918a019190915280518083529194508501915084840190600581901b8501860160005b82811015610b8f57868203601f1901845284518051878452610b6388850182610a7b565b918a0151848303858c0152919050610b7b8183610a7b565b968a0196958a019593505050600101610b3f565b5060a08901519650610ba560a08b018815159052565b9998505050505050505050565b602081526000610bc56020830184610ac8565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610c0557610c05610bcc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c3457610c34610bcc565b604052919050565b600082601f830112610c4d57600080fd5b813567ffffffffffffffff811115610c6757610c67610bcc565b610c7a601f8201601f1916602001610c0b565b818152846020838601011115610c8f57600080fd5b816020850160208301376000918101602001919091529392505050565b80358015158114610cbc57600080fd5b919050565b600080600080600060a08688031215610cd957600080fd5b67ffffffffffffffff8087351115610cf057600080fd5b610cfd8888358901610c3c565b95508060208801351115610d1057600080fd5b610d208860208901358901610c3c565b945060408701356001600160a01b03811614610d3b57600080fd5b604087013593508060608801351115610d5357600080fd5b6060870135870188601f820112610d6957600080fd5b8181351115610d7a57610d7a610bcc565b610d8a6020823560051b01610c0b565b81358082526020808301929160051b8401018b1015610da857600080fd5b602083015b6020843560051b850101811015610e50578481351115610dcc57600080fd5b803584016040818e03601f19011215610de457600080fd5b610dec610be2565b8660208301351115610dfd57600080fd5b610e0f8e602080850135850101610c3c565b81528660408301351115610e2257600080fd5b610e358e60206040850135850101610c3c565b60208201528085525050602083019250602081019050610dad565b509450610e639250505060808701610cac565b90509295509295909350565b60008060408385031215610e8257600080fd5b82359150610e9260208401610cac565b90509250929050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ef057603f19888603018452610ede858351610ac8565b94509285019290850190600101610ec2565b5092979650505050505050565b600181811c90821680610f1157607f821691505b60208210811415610f3257634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610f5957634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052603260045260246000fd5b8054600090600181811c9080831680610f8e57607f831692505b6020808410821415610fb057634e487b7160e01b600052602260045260246000fd5b83885260208801828015610fcb5760018114610fdc57611007565b60ff19871682528282019750611007565b60008981526020902060005b8781101561100157815484820152908601908401610fe8565b83019850505b5050505050505092915050565b60006040808352845481840152600160c0606085015261103a6101008501828801610f74565b6002603f198087840301608088015261105583838b01610f74565b60038a01546001600160a01b031660a089015287810390910160c0880152600489018054808352600091825260208083209395508086019392600583901b87018201905b838110156110de57878203601f190186528982526110b98a830186610f74565b828103848401526110cc818b8801610f74565b96840196958801959250508801611099565b5060059c909c015460ff16151560e08b015290980198909852509697965050505050505056fea26469706673582212209200342b94ea3454966c543d849863cb6b594d5693dcd31e96e64e30d62d54ad64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6,
        "contract": "src/Shortcuts.sol:Shortcuts",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11,
        "contract": "src/Shortcuts.sol:Shortcuts",
        "label": "_shortcuts",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Shortcut)232_storage)"
      },
      {
        "astId": 13,
        "contract": "src/Shortcuts.sol:Shortcuts",
        "label": "_index",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(UserParams)217_storage)dyn_storage": {
        "base": "t_struct(UserParams)217_storage",
        "encoding": "dynamic_array",
        "label": "struct ShortcutsInterface.UserParams[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Shortcut)232_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct ShortcutsInterface.Shortcut)",
        "numberOfBytes": "32",
        "value": "t_struct(Shortcut)232_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Shortcut)232_storage": {
        "encoding": "inplace",
        "label": "struct ShortcutsInterface.Shortcut",
        "members": [
          {
            "astId": 219,
            "contract": "src/Shortcuts.sol:Shortcuts",
            "label": "index",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 221,
            "contract": "src/Shortcuts.sol:Shortcuts",
            "label": "shortcutType",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 223,
            "contract": "src/Shortcuts.sol:Shortcuts",
            "label": "endpoint",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 225,
            "contract": "src/Shortcuts.sol:Shortcuts",
            "label": "contractAddr",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 229,
            "contract": "src/Shortcuts.sol:Shortcuts",
            "label": "userParams",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_struct(UserParams)217_storage)dyn_storage"
          },
          {
            "astId": 231,
            "contract": "src/Shortcuts.sol:Shortcuts",
            "label": "isReady",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(UserParams)217_storage": {
        "encoding": "inplace",
        "label": "struct ShortcutsInterface.UserParams",
        "members": [
          {
            "astId": 214,
            "contract": "src/Shortcuts.sol:Shortcuts",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 216,
            "contract": "src/Shortcuts.sol:Shortcuts",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}