// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddShortcut extends ethereum.Event {
  get params(): AddShortcut__Params {
    return new AddShortcut__Params(this);
  }
}

export class AddShortcut__Params {
  _event: AddShortcut;

  constructor(event: AddShortcut) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newShortcut(): AddShortcutNewShortcutStruct {
    return changetype<AddShortcutNewShortcutStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }

  get blockNum(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class AddShortcutNewShortcutStruct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get shortcutType(): string {
    return this[1].toString();
  }

  get endpoint(): string {
    return this[2].toString();
  }

  get contractAddr(): Address {
    return this[3].toAddress();
  }

  get userParams(): Array<AddShortcutNewShortcutUserParamsStruct> {
    return this[4].toTupleArray<AddShortcutNewShortcutUserParamsStruct>();
  }

  get isReady(): boolean {
    return this[5].toBoolean();
  }
}

export class AddShortcutNewShortcutUserParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): string {
    return this[1].toString();
  }
}

export class SetIsReady extends ethereum.Event {
  get params(): SetIsReady__Params {
    return new SetIsReady__Params(this);
  }
}

export class SetIsReady__Params {
  _event: SetIsReady;

  constructor(event: SetIsReady) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newIsReady(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Shortcuts__addShortcutInputUserParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): string {
    return this[1].toString();
  }
}

export class Shortcuts__getAllShortcutsResultValue0Struct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get shortcutType(): string {
    return this[1].toString();
  }

  get endpoint(): string {
    return this[2].toString();
  }

  get contractAddr(): Address {
    return this[3].toAddress();
  }

  get userParams(): Array<
    Shortcuts__getAllShortcutsResultValue0UserParamsStruct
  > {
    return this[4].toTupleArray<
      Shortcuts__getAllShortcutsResultValue0UserParamsStruct
    >();
  }

  get isReady(): boolean {
    return this[5].toBoolean();
  }
}

export class Shortcuts__getAllShortcutsResultValue0UserParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): string {
    return this[1].toString();
  }
}

export class Shortcuts__getShortcutByIndexResultValue0Struct extends ethereum.Tuple {
  get index(): BigInt {
    return this[0].toBigInt();
  }

  get shortcutType(): string {
    return this[1].toString();
  }

  get endpoint(): string {
    return this[2].toString();
  }

  get contractAddr(): Address {
    return this[3].toAddress();
  }

  get userParams(): Array<
    Shortcuts__getShortcutByIndexResultValue0UserParamsStruct
  > {
    return this[4].toTupleArray<
      Shortcuts__getShortcutByIndexResultValue0UserParamsStruct
    >();
  }

  get isReady(): boolean {
    return this[5].toBoolean();
  }
}

export class Shortcuts__getShortcutByIndexResultValue0UserParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): string {
    return this[1].toString();
  }
}

export class Shortcuts extends ethereum.SmartContract {
  static bind(address: Address): Shortcuts {
    return new Shortcuts("Shortcuts", address);
  }

  addShortcut(
    shortcutType: string,
    endpoint: string,
    contractAddr: Address,
    userParams: Array<Shortcuts__addShortcutInputUserParamsStruct>,
    isReady: boolean
  ): BigInt {
    let result = super.call(
      "addShortcut",
      "addShortcut(string,string,address,(string,string)[],bool):(uint256)",
      [
        ethereum.Value.fromString(shortcutType),
        ethereum.Value.fromString(endpoint),
        ethereum.Value.fromAddress(contractAddr),
        ethereum.Value.fromTupleArray(userParams),
        ethereum.Value.fromBoolean(isReady)
      ]
    );

    return result[0].toBigInt();
  }

  try_addShortcut(
    shortcutType: string,
    endpoint: string,
    contractAddr: Address,
    userParams: Array<Shortcuts__addShortcutInputUserParamsStruct>,
    isReady: boolean
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addShortcut",
      "addShortcut(string,string,address,(string,string)[],bool):(uint256)",
      [
        ethereum.Value.fromString(shortcutType),
        ethereum.Value.fromString(endpoint),
        ethereum.Value.fromAddress(contractAddr),
        ethereum.Value.fromTupleArray(userParams),
        ethereum.Value.fromBoolean(isReady)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllShortcuts(): Array<Shortcuts__getAllShortcutsResultValue0Struct> {
    let result = super.call(
      "getAllShortcuts",
      "getAllShortcuts():((uint256,string,string,address,(string,string)[],bool)[])",
      []
    );

    return result[0].toTupleArray<
      Shortcuts__getAllShortcutsResultValue0Struct
    >();
  }

  try_getAllShortcuts(): ethereum.CallResult<
    Array<Shortcuts__getAllShortcutsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllShortcuts",
      "getAllShortcuts():((uint256,string,string,address,(string,string)[],bool)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Shortcuts__getAllShortcutsResultValue0Struct>()
    );
  }

  getShortcutByIndex(
    index: BigInt
  ): Shortcuts__getShortcutByIndexResultValue0Struct {
    let result = super.call(
      "getShortcutByIndex",
      "getShortcutByIndex(uint256):((uint256,string,string,address,(string,string)[],bool))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return changetype<Shortcuts__getShortcutByIndexResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getShortcutByIndex(
    index: BigInt
  ): ethereum.CallResult<Shortcuts__getShortcutByIndexResultValue0Struct> {
    let result = super.tryCall(
      "getShortcutByIndex",
      "getShortcutByIndex(uint256):((uint256,string,string,address,(string,string)[],bool))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Shortcuts__getShortcutByIndexResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddShortcutCall extends ethereum.Call {
  get inputs(): AddShortcutCall__Inputs {
    return new AddShortcutCall__Inputs(this);
  }

  get outputs(): AddShortcutCall__Outputs {
    return new AddShortcutCall__Outputs(this);
  }
}

export class AddShortcutCall__Inputs {
  _call: AddShortcutCall;

  constructor(call: AddShortcutCall) {
    this._call = call;
  }

  get shortcutType(): string {
    return this._call.inputValues[0].value.toString();
  }

  get endpoint(): string {
    return this._call.inputValues[1].value.toString();
  }

  get contractAddr(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get userParams(): Array<AddShortcutCallUserParamsStruct> {
    return this._call.inputValues[3].value.toTupleArray<
      AddShortcutCallUserParamsStruct
    >();
  }

  get isReady(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class AddShortcutCall__Outputs {
  _call: AddShortcutCall;

  constructor(call: AddShortcutCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddShortcutCallUserParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get value(): string {
    return this[1].toString();
  }
}

export class SetIsReadyCall extends ethereum.Call {
  get inputs(): SetIsReadyCall__Inputs {
    return new SetIsReadyCall__Inputs(this);
  }

  get outputs(): SetIsReadyCall__Outputs {
    return new SetIsReadyCall__Outputs(this);
  }
}

export class SetIsReadyCall__Inputs {
  _call: SetIsReadyCall;

  constructor(call: SetIsReadyCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newIsReady(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetIsReadyCall__Outputs {
  _call: SetIsReadyCall;

  constructor(call: SetIsReadyCall) {
    this._call = call;
  }
}
